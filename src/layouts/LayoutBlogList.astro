---
import type { Page } from "astro"
import { getCollection, type CollectionEntry } from "astro:content"
import BasicLayout from "@layouts/BasicLayout.astro"
import LinkButton from "@components/LinkButton.astro"
import PostRow from "@components/Blog/PostRow.astro"
import Card from "@components/Card/index.astro"
interface Props {
  page: Page<CollectionEntry<"posts">> | undefined
  title: string
  description?: string
}

const posts = await getCollection("posts");
const tags: Array<[string, number]> = [
  ...posts
    .filter(article => !article.data.draft)
    .flatMap(article => [...article.data.tags])
    .reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map()),
].sort((a, b) => {
  return b[1] - a[1];
});

const years: Array<[string, number]> = [
  ...posts
    .map(article => new Date(article.data.pubDatetime).getFullYear())
    .reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map()),
].sort((a, b) => {
  return b[0] - a[0];
});

const { page, title, description } = Astro.props

if (!page) {
  throw new Error("No page data provided")
}
---

<BasicLayout title={title + " | " + "liruifengv"} description={description}>
  <main
    class="w-screen h-screen flex flex-col md:flex-row justify-start gap-5 items-start max-w-6xl mx-auto p-4 md:p-8"
  >
    <Card class="h-full md:max-w-3xl w-full">
      <a
        href="/"
        class="text-white bg-neutral-900 hover:bg-neutral-800 px-4 py-2 mb-8 border border-neutral-600 rounded-lg"
        >Back</a
      >
      <h1 class="text-4xl font-bold mb-4 text-neutral-100 mt-5">Posts</h1>
      <ul class="w-full">
        {
          page.data?.map((post) => (
            <PostRow
              title={post.data.title || "No title"}
              date={post.data.pubDatetime || new Date()}
              url={post.slug}
            />
          ))
        }
      </ul>

      <div class="flex items-center justify-end w-full mt-5">
        <LinkButton
          href={page.url.prev || "#"}
          className={`text-white bg-neutral-900 hover:bg-neutral-800 px-2 py-1 border border-neutral-600 rounded-lg text-sm mr-4`}
          ariaLabel="Previous"
          disabled={!page.url.prev}
        >
          上一页
        </LinkButton>

        <LinkButton
          href={page.url.next || "#"}
          className={`text-white bg-neutral-900 hover:bg-neutral-800 px-2 py-1 border border-neutral-600 rounded-lg text-sm`}
          ariaLabel="Next"
          disabled={!page.url.next}
        >
          下一页
        </LinkButton>
      </div>
    </Card>
    <div class="flex-1">
      <Card class="h-full w-full text-white" title="标签">
        <div class="w-full h-full text-white mt-1">
          {
            tags.map((tag) => (
              <LinkButton href={`/tags/${tag[0]}`} className="text-white mr-4 mb-2 hover:text-primary-500 hover:underline underline-offset-4">
                #{tag[0]}({tag[1]})
              </LinkButton>
            ))
          }
        </div>
      </Card>
      <Card class="h-full w-full mt-5">
        <div class="w-full h-full text-white">
          {
            years.map((year) => (
              <LinkButton href={`/year/${year[0]}`} className="text-white mr-4 mb-2 hover:text-primary-500 hover:underline underline-offset-4">
                {year[0]}({year[1]})
              </LinkButton>
            ))  
          }
        </div>
      </Card>
    </div>
  </main>
</BasicLayout>

<style>
  .disabled {
    @apply pointer-events-none select-none opacity-50;
  }
  svg {
    dark: text-white;
  }
  .list {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: center;
  }
</style>
